cmake_minimum_required(VERSION 3.10)

set(CMAKE_VERBOSE_MAKEFILE ON)
# Set the project name and version
project(MWDeviceTreeGen VERSION 1.0)

find_program(DTC_EXECUTABLE NAMES dtc)
if (NOT DTC_EXECUTABLE)
	message(FATAL_ERROR "dtc (Device tree compiler) not found")
endif()

# Get the path to the kernel source and the target architecture from the environment
set(ARCH "${ARCH}")
set(CROSS_COMPILE_GCC "${CROSS_COMPILE}gcc")
set(LINUX_KERNEL  "${KERNEL_DIR}")


file(GLOB DTS_FILES "${CMAKE_CURRENT_SOURCE_DIR}/*.dts")

foreach (DTS_FILE IN LISTS DTS_FILES)
  # Get the filename without folder and extension
  get_filename_component(DTS_FILENAME_NOEXT ${DTS_FILE} NAME_WE)
  set(DTS_PRE_PROC_FILE  "${CMAKE_CURRENT_BINARY_DIR}/${DTS_FILENAME_NOEXT}.pre.dts")
  set(DTS_PRE_PROC_DEP_FILE "${CMAKE_CURRENT_BINARY_DIR}/${DTS_FILENAME_NOEXT}.dts.dep")
  set(DTB_FILE "${CMAKE_CURRENT_BINARY_DIR}/${DTS_FILENAME_NOEXT}.dtb")

  # Create a custom command that generates a device-tree blobs 
  add_custom_command(
    OUTPUT ${DTS_PRE_PROC_FILE}
    COMMAND ${CROSS_COMPILE_GCC} -E -Wp,-MD,${DTS_PRE_PROC_DEP_FILE} -nostdinc -undef -D__DTS__ -x assembler-with-cpp -I${LINUX_KERNEL}/include -I${LINUX_KERNEL}/arch/arm64/boot/dts/xilinx -I${LINUX_KERNEL}/arch/arm/boot/dts/xilinx -I${CMAKE_CURRENT_SOURCE_DIR} -I${CMAKE_CURRENT_SOURCE_DIR}/common -I${CMAKE_CURRENT_SOURCE_DIR}/zynqmp -I${CMAKE_CURRENT_SOURCE_DIR}/zynq -o ${DTS_PRE_PROC_FILE} ${DTS_FILE}
    DEPENDS ${DTS_FILE}
    COMMENT "Pre-processing ${DTS_FILE}..."
    VERBATIM
  )

  # Create a custom command that generates a device-tree blobs 
  add_custom_command(
    OUTPUT ${DTB_FILE}
    COMMAND ${DTC_EXECUTABLE} -@ -I dts -O dtb -o ${DTB_FILE} ${DTS_PRE_PROC_FILE}
    DEPENDS ${DTS_PRE_PROC_FILE}
    COMMENT "Compiling ${DTS_PRE_PROC_FILE} to ${DTB_FILE}..."
    VERBATIM
  )
  
  list(APPEND DTB_FILES ${DTB_FILE})
endforeach()
# Create a custom target that depends on the output generated by the custom command
add_custom_target(
  CompileDTS ALL
  DEPENDS ${DTB_FILES}
)

foreach(DTB_FILE IN LISTS DTB_FILES)
  install(
    FILES ${DTB_FILE}
    DESTINATION /boot/dtbs/
  )
endforeach()
